import numpy as np
from scipy.integrate import odeint
import matplotlib.pyplot as plt

# function returns dsbdt, debdt, dibdt, drbdt, dszdt, dezdt, dizdt, drzdt
def i_seir(x, t):
    bb = 1.2                # the recruitment of susceptible nodes in Blue
    bz = 1.2                # the recruitment of susceptible nodes in Red
    db = 0.2                # the per capita natural mortality rate in Blue
    dz = 0.2                # the per capita natural mortality rate in Red
    lamb = 1.3              # the rate for nodes leaving the susceptible class for infectious class in Blue
    lamz = 1.3              # the rate for nodes leaving the susceptible class for infectious class in Red
    ksib = 0.4              # the rate for nodes leaving the exposed class for infectious class in Blue
    ksiz = 0.4              # the rate for nodes leaving the exposed class for infectious class in Red
    gamab = 0.6             # the rate for nodes leaving the infectious class for recovered class in Blue
    gamaz = 0.6             # the rate for nodes leaving the infectious class for recovered class in Red
    etab = 0.3              # disease related death rate in the infectious class in Blue
    etaz = 0.3              # disease related death rate in the infectious class in Red
    zetab = 0.8             # the rate for nodes becoming susceptible again after recovery in Blue
    zetaz = 0.8             # the rate for nodes becoming susceptible again after recovery in Red
    pb = 0.1                # a fraction p of the new nodes from the exposed class are introduced into the exposed class in Blue
    pz = 0.1                # a fraction p of the new nodes from the exposed class are introduced into the exposed class in Red
    qb = 0.15               # a fraction q of the new nodes from the infectious class are introduced into the exposed class in Blue
    qz = 0.15               # a fraction q of the new nodes from the infectious class are introduced into the exposed class in Red

    rhoup = 0.1             # Normal kinetic attack rate of Red forces
    rhodown = 0.01          # Diminished kinetic attack rate (because of infection) of Red forces
    bup = 0.1               # Normal kinetic attack rate of Blue forces
    bdown = 0.01            # Diminished kinetic attack rate (because of infection) of Blue forces

    sb = x[0]               # Initial number of Susceptible in Blue
    eb = x[1]               # Initial number of Exposed in Blue
    ib = x[2]               # Initial number of Infected in Blue
    rb = x[3]               # Initial number of Recovered in Blue
    sz = x[4]               # Initial number of Susceptible in Red
    ez = x[5]               # Initial number of Exposed in Red
    iz = x[6]               # Initial number of Infected in Red
    rz = x[7]               # Initial number of Recovered in Red

    dsbdt = bb - lamb * sb * ib - pb * bb * eb - qb * bb * ib - db * sb + zetab * rb - (rhoup * (sz + ez + rz) + rhodown * iz) * (sb / (sb + eb + ib + rb))
    debdt = lamb * sb * ib + pb * bb * eb + qb * bb * ib - ksib * eb - db * eb - (rhoup * (sz + ez + rz) + rhodown * iz) * (eb / (sb + eb + ib + rb))
    dibdt = ksib * eb - gamab * ib - db * ib - etab * ib - (rhoup * (sz + ez + rz) + rhodown * iz) * (ib / (sb + eb + ib + rb))
    drbdt = gamab * ib - zetab * rb - db * rb - (rhoup * (sz + ez + rz) + rhodown * iz) * (rb / (sb + eb + ib + rb))

    dszdt = bz - lamz * sz * iz - pz * bz * ez - qz * bz * iz - dz * sz + zetaz * rz - (bup * (sb + eb + rb) + bdown * ib) * (sz / (sz + ez + iz + rz))
    dezdt = lamz * sz * iz + pz * bz * ez + qz * bz * iz - ksiz * ez - dz * ez - (bup * (sb + eb + rb) + bdown * ib) * (ez / (sz + ez + iz + rz))
    dizdt = ksiz * ez - gamaz * iz - dz * iz - etaz * iz - (bup * (sb + eb + rb) + bdown * ib) * (iz / (sz + ez + iz + rz))
    drzdt = gamaz * iz - zetaz * rz - dz * rz - (bup * (sb + eb + rb) + bdown * ib) * (rz / (sz + ez + iz + rz))

    return [dsbdt, debdt, dibdt, drbdt, dszdt, dezdt, dizdt, drzdt]


# initial condition
# Blue has 150 Susceptible, 0 Exposed/Infected and 10 Recovered.
# Red has 120 Susceptible, 20 Exposed, 20 Infected and 0 Recovered.
x0 = [150, 0, 0, 10, 120, 20, 20, 0]
t = np.linspace(0, 10, 100)

# solve ODE
x = odeint(i_seir, x0, t)

sb = x[:, 0]
eb = x[:, 1]
ib = x[:, 2]
rb = x[:, 3]
sz = x[:, 4]
ez = x[:, 5]
iz = x[:, 6]
rz = x[:, 7]

# plot results
# for blue units
# plt.plot(t, sb, 'g-')
# plt.plot(t, eb, 'c--')
# plt.plot(t, ib, 'm-.')
# plt.plot(t, rb, 'k:')
plt.plot(t, sb + eb + ib + rb, 'b-')

# for red units
# plt.plot(t, sz, 'g-')
# plt.plot(t, ez, 'c--')
# plt.plot(t, iz, 'm-.')
# plt.plot(t, rz, 'k:')
plt.plot(t, sz + ez + iz + rz, 'r-')

plt.xlabel('Time')
plt.ylabel('Total Number')
# plt.ylabel('Number of compartments')
plt.legend(['Blue', 'Red'])
#plt.legend(['Susceptible-Blue', 'Exposed-Blue', 'Infected-Blue', 'Removed-Blue'])
# plt.legend(['Susceptible-Red', 'Exposed-Red', 'Infected-Red', 'Removed-Red'])
plt.show()
