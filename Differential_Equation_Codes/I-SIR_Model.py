import numpy as np
from scipy.integrate import odeint
import matplotlib.pyplot as plt

# function returns dsbdt, dibdt, drbdt, dszdt, dizdt, drzdt
def i_sir(x, t):
    epsb = 0.005            # The rate of passage from the susceptible state to the infected state for blue
    epsz = 0.005            # The rate of passage from the susceptible state to the infected state for red
    etab = 0.0005           # The rate of passage from the susceptible/infected state to the removed stage for blue
    etaz = 0.0005           # The rate of passage from the susceptible/infected state to the removed stage for red

    rhoup = 0.1             # Normal kinetic attack rate of Red forces
    rhodown = 0.01          # Diminished kinetic attack rate (because of infection) of Red forces
    bup = 0.1               # Normal kinetic attack rate of Blue forces
    bdown = 0.01            # Diminished kinetic attack rate (because of infection) of Blue forces

    sb = x[0]               # Initial number of Susceptible in Blue
    ib = x[1]               # Initial number of Infected in Blue
    rb = x[2]               # Initial number of Recovered in Blue
    sz = x[3]               # Initial number of Susceptible in Red
    iz = x[4]               # Initial number of Infected in Red
    rz = x[5]               # Initial number of Recovered in Red

    dsbdt = -epsb * sb * ib - etab * sb * rb - (rhoup * (sz + rz) + rhodown * iz) * (sb / (sb + ib + rb))
    dibdt = epsb * sb * ib - etab * ib * rb - (rhoup * (sz + rz) + rhodown * iz) * (ib / (sb + ib + rb))
    drbdt = etab * sb * rb + etab * ib * rb - (rhoup * (sz + rz) + rhodown * iz) * (rb / (sb + ib + rb))

    dszdt = -epsz * sz * iz - etaz * sz * rz - (bup * (sb + rb) + bdown * ib) * (sz / (sz + iz + rz))
    dizdt = epsz * sz * iz - etaz * iz * rz - (bup * (sb + rb) + bdown * ib) * (iz / (sz + iz + rz))
    drzdt = etaz * sz * rz + etaz * iz * rz - (bup * (sb + rb) + bdown * ib) * (rz / (sz + iz + rz))

    return [dsbdt, dibdt, drbdt, dszdt, dizdt, drzdt]

# initial condition
# Both side has 90 Susceptible. Blue has 0 Infected, while Red has 1 Infected. Blue has 10 Recovered, while Red has 9 Recovered.
x0 = [90, 0 , 10, 90, 1, 9]
t = np.linspace(0, 20, 100)

# solve ODE
x = odeint(i_sir, x0, t)

sb = x[:,0]
ib = x[:,1]
rb = x[:,2]
sz = x[:,3]
iz = x[:,4]
rz = x[:,5]

# plot results
# for blue units
# plt.plot(t, sb, 'g-')
# plt.plot(t, ib, 'm-.')
# plt.plot(t, rb, 'k:')
plt.plot(t, sb + ib + rb, 'b-')

# for red units
# plt.plot(t, sz, 'g-')
# plt.plot(t, iz, 'm-.')
# plt.plot(t, rz, 'k:')
plt.plot(t, sz + iz + rz, 'r-')

plt.xlabel('Time')
plt.ylabel('Total Number')
# plt.ylabel('Number of compartments')
plt.legend(['Blue', 'Red'])
# plt.legend(['Susceptible-Blue', 'Infected-Blue', 'Remove-Blue', 'Susceptible-Red', 'Infected-Red', 'Remove-Red'])
plt.show()